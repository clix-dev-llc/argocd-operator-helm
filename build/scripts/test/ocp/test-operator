#!/usr/bin/env bash
set -e

MARKETPLACE_NAMESPACE=openshift-marketplace

if [ "$DISTRIBUTION" == "ocp4" ]; then
    eval $(crc oc-env)
else
    eval $(minishift oc-env)
    MARKETPLACE_NAMESPACE=olm
fi

echo "======================================================"
echo "Install and Test operator with olm installation"
echo "======================================================"
echo "Install and Test"
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/namespace.yaml
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/catalog-source.yaml
echo "Wait 40s"
sleep 40
oc wait pod -n ${MARKETPLACE_NAMESPACE} -l olm.catalogSource=argocd-catalog --for=condition=Ready --timeout=120s
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/operator-group.yaml
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/subscription.yaml
echo "Wait 60s"
sleep 60

oc describe subscription argocd-operator-helm -n argocd
oc describe catalogsource argocd-catalog -n olm
sleep 10
oc describe subscription argocd-operator-helm -n argocd
oc describe catalogsource argocd-catalog -n olm
sleep 10
oc describe subscription argocd-operator-helm -n argocd
oc describe catalogsource argocd-catalog -n olm
sleep 10

oc describe deployment/argocd-operator-helm -n argocd
oc describe pod argocd-operator-helm -n argocd
sleep 10
oc describe deployment/argocd-operator-helm -n argocd
oc describe pod argocd-operator-helm -n argocd
sleep 10
oc describe deployment/argocd-operator-helm -n argocd
oc describe pod argocd-operator-helm -n argocd
sleep 10
oc describe deployment/argocd-operator-helm -n argocd
oc describe pod argocd-operator-helm -n argocd
sleep 10
oc describe deployment/argocd-operator-helm -n argocd
oc describe pod argocd-operator-helm -n argocd
sleep 10
oc describe deployment/argocd-operator-helm -n argocd
oc describe pod argocd-operator-helm -n argocd
sleep 10


oc wait pod -n argocd -l name=argocd-operator-helm --for=condition=Ready --timeout=120s
oc rollout status -w deployment/argocd-operator-helm -n argocd
echo "Remove olm installation"
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/subscription.yaml
oc delete csvs --all -n argocd
oc delete crd argocds.argoproj.io
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/catalog-source.yaml
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/operator-group.yaml
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/namespace.yaml

echo "======================================================"
echo "Install and Test operator with manual installation"
echo "======================================================"
echo "Install and Test"
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/namespace.yaml
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/service-account.yaml
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/role.yaml
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/role-binding.yaml
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/crd.yaml
oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/deployment.yaml
echo "Wait 5s"
sleep 5
oc wait pod -n argocd -l name=argocd-operator-helm --for=condition=Ready --timeout=120s
oc rollout status -w deployment/argocd-operator-helm -n argocd
echo "Remove manual installation"
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/deployment.yaml
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/crd.yaml
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/role-binding.yaml
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/role.yaml
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/service-account.yaml
oc delete -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/namespace.yaml

#!/usr/bin/env bash
set -e

if [ "$DISTRIBUTION" == "ocp4" ]; then
    eval $(crc oc-env)
else
    eval $(minishift oc-env)
fi

echo "======================================================"
echo "Install and Test Argo CD installation"
echo "======================================================"

if [ "$DISTRIBUTION" == "ocp4" ]; then
    echo "Install Operator with olm installation"
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/namespace.yaml
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/catalog-source.yaml
    echo "Wait 20s"
    sleep 20
    oc wait pod -n openshift-marketplace -l olm.catalogSource=argocd-catalog --for=condition=Ready --timeout=120s
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/operator-group.yaml
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/olm/subscription.yaml
    echo "Wait 60s"
    sleep 60
    oc wait pod -n argocd -l name=argocd-operator-helm --for=condition=Ready --timeout=120s
    oc rollout status -w deployment/argocd-operator-helm -n argocd
else
    echo "Install Operator with manual installation"
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/namespace.yaml
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/service-account.yaml
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/role.yaml
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/role-binding.yaml
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/crd.yaml
    oc apply -f build/_output/guides/${ENVIRONMENT}/${DISTRIBUTION}/manual/deployment.yaml
    echo "Wait 60s"
    sleep 60
    oc wait pod -n argocd -l name=argocd-operator-helm --for=condition=Ready --timeout=120s
    oc rollout status -w deployment/argocd-operator-helm -n argocd
fi

echo "Istall ArgoCD without OAuth integration"
oc apply -f examples/ocp.yaml
echo "Wait 240s for ArgoCD instance"
sleep 240
oc rollout status -w deployment/argocd-application-controller -n argocd
oc rollout status -w deployment/argocd-dex-server -n argocd
oc rollout status -w deployment/argocd-redis -n argocd
oc rollout status -w deployment/argocd-repo-server -n argocd
oc rollout status -w deployment/argocd-server -n argocd
oc get all -n argocd
echo "Remove ArgoCD instance"
oc delete ArgoCD argocd -n argocd
oc delete crd appprojects.argoproj.io
oc delete crd applications.argoproj.io
oc delete crd workflowtemplates.argoproj.io
oc delete crd workflows.argoproj.io
echo "ArgoCD removed"
echo "Istall ArgoCD with OAuth integration"
oc apply -f examples/ocp-oauth.yaml
echo "Wait 240s for ArgoCD installation"
sleep 240
oc rollout status -w deployment/argocd-application-controller -n argocd
oc rollout status -w deployment/argocd-dex-server -n argocd
oc rollout status -w deployment/argocd-redis -n argocd
oc rollout status -w deployment/argocd-repo-server -n argocd
oc rollout status -w deployment/argocd-server -n argocd
oc get all -n argocd
